version: "3.7"

services:
  otasoft-api:
    image: "otasoft-api:dev"
    container_name: "otasoft-api"
    # build:
    #   context: "./api-gateway/otasoft-api"
    networks:
      - "backend"
    ports:
      - "3000:3000"
    depends_on:
      - "otasoft-auth"
      - "otasoft-customer"
      # - "otasoft-mail"
      - "otasoft-booking"
      - "otasoft-api-rabbitmq"
      - "otasoft-api-redis"
    env_file: .env
    environment: 
      REDIS_HOST: otasoft-api-redis
      RABBITMQ_FIRST_HOST_PORT: 5672
      RABBITMQ_NODENAME: "otasoft-api-rabbitmq"
    restart: "on-failure"

  otasoft-api-rabbitmq:
    container_name: otasoft-api-rabbitmq
    image: rabbitmq:3.8.8-management-alpine
    hostname: otasoft-api-rabbitmq
    container_name: otasoft-api-rabbitmq
    ports:
        - ${RABBITMQ_FIRST_HOST_PORT}:5672
        - ${RABBITMQ_SECOND_HOST_PORT}:15672
    volumes:
        - ./data/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
      RABBITMQ_NODENAME: "rabbitmq"
    networks:
      - "backend"

  otasoft-api-redis:
    container_name: otasoft-api-redis
    image: redis:5-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - $PWD/api-gateway/otasoft-api/src/cache/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    ports: 
      - ${REDIS_PORT}:6379
    networks: 
      - "backend"

  otasoft-api-nginx:
    image: nginx:alpine
    container_name: otasoft-api-nginx
    ports:
        - 80:80
        - 443:443
    volumes:
        - ./api-gateway/otasoft-api/nginx/prod:/etc/nginx/conf.d/
        - ./api-gateway/otasoft-api/src/security/secrets/public-cert.crt:/etc/ssl/public-cert.crt
        - ./api-gateway/otasoft-api/src/security/secrets/private-key.key:/etc/ssl/private-key.key
    depends_on: 
      - "otasoft-api"
    ulimits:
      nproc: 65535
    networks:
      - "backend"

  otasoft-auth:
    image: "otasoft-auth:dev"
    container_name: "otasoft-auth"
    # build:
    #   context: "./microservices/otasoft-auth"
    networks:
      - "backend"
      - "authdomain"
    depends_on:
      - "otasoft-auth-db"
      - "otasoft-api-rabbitmq"
    links: 
      - "otasoft-api-rabbitmq"
    env_file: .env
    environment: 
      POSTGRES_HOST: "otasoft-auth-db"
      POSTGRES_PORT: "5432"
      POSTGRES_USERNAME: ${AUTH_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${AUTH_POSTGRES_DATABASE}
      RABBITMQ_NODENAME: "otasoft-api-rabbitmq"
      RABBITMQ_FIRST_HOST_PORT: "5672"
    restart: "on-failure"

  otasoft-auth-db:
    image: postgres:${AUTH_POSTGRES_VERSION}
    container_name: "otasoft-auth-db"
    networks:
      - "authdomain"
    expose:
      - "5432"
    volumes:
      - authdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${AUTH_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
      POSTGRES_DB: ${AUTH_POSTGRES_DATABASE}
    restart: "on-failure"

  otasoft-booking:
    image: "otasoft-booking:dev"
    container_name: "otasoft-booking"
    # build:
    #   context: "./microservices/otasoft-booking"
    networks:
      - "backend"
      - "bookingdomain"
    depends_on:
      - "otasoft-booking-db"
      - "otasoft-api-rabbitmq"
    links: 
      - "otasoft-api-rabbitmq"
    env_file: .env
    environment: 
      POSTGRES_HOST: "otasoft-booking-db"
      POSTGRES_PORT: "5432"
      POSTGRES_USERNAME: ${BOOKING_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${BOOKING_POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${BOOKING_POSTGRES_DATABASE}
      RABBITMQ_NODENAME: "otasoft-api-rabbitmq"
      RABBITMQ_FIRST_HOST_PORT: "5672"
    restart: "on-failure"

  otasoft-booking-db:
    image: postgres:${AUTH_POSTGRES_VERSION}
    container_name: "otasoft-booking-db"
    networks:
      - "bookingdomain"
    expose:
      - "5432"
    volumes:
      - bookingdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${BOOKING_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${BOOKING_POSTGRES_PASSWORD}
      POSTGRES_DB: ${BOOKING_POSTGRES_DATABASE}
    restart: "on-failure"

  otasoft-customer:
    image: "otasoft-customer:dev"
    container_name: "otasoft-customer"
    # build:
    #   context: "./microservices/otasoft-customer"
    networks:
      - "backend"
      - "customerdomain"
    depends_on:
      - "otasoft-customer-db"
      - "otasoft-api-rabbitmq"
    links: 
      - "otasoft-api-rabbitmq"
    env_file: .env
    environment: 
      POSTGRES_HOST: "otasoft-customer-db"
      POSTGRES_PORT: "5432"
      POSTGRES_USERNAME: ${CUSTOMER_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${CUSTOMER_POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${CUSTOMER_POSTGRES_DATABASE}
      RABBITMQ_FIRST_HOST_PORT: "5672"
      RABBITMQ_NODENAME: "otasoft-api-rabbitmq"
    restart: "on-failure"

  otasoft-customer-db:
    image: postgres:${AUTH_POSTGRES_VERSION}
    container_name: "otasoft-customer-db"
    networks:
      - "customerdomain"
    expose:
      - "5432"
    volumes:
      - customerdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${CUSTOMER_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${CUSTOMER_POSTGRES_PASSWORD}
      POSTGRES_DB: ${CUSTOMER_POSTGRES_DATABASE}
    restart: "on-failure"

  otasoft-mail:
    image: "otasoft-mail:dev"
    container_name: "otasoft-mail"
    build:
      context: "./microservices/otasoft-mail"
    networks:
      - "backend"
      - "maildomain"
    depends_on:
      - "otasoft-mail-db"
      - "otasoft-api-rabbitmq"
    links: 
      - "otasoft-api-rabbitmq"
    env_file: .env
    environment: 
      POSTGRES_HOST: "otasoft-mail-db"
      POSTGRES_PORT: "5432"
      POSTGRES_USERNAME: ${MAIL_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${MAIL_POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${MAIL_POSTGRES_DATABASE}
      # RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      # RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      # RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
      RABBITMQ_FIRST_HOST_PORT: "5672"
      RABBITMQ_NODENAME: "otasoft-api-rabbitmq"
      # SENDGRID_KEY: ${SENDGRID_KEY}
      # SERVER_URL: ${SERVER_URL}
    restart: "on-failure"

  otasoft-mail-db:
    image: postgres:${AUTH_POSTGRES_VERSION}
    container_name: "otasoft-mail-db"
    networks:
      - "maildomain"
    expose:
      - "5432"
    volumes:
      - maildata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${MAIL_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${MAIL_POSTGRES_PASSWORD}
      POSTGRES_DB: ${MAIL_POSTGRES_DATABASE}
    restart: "on-failure"

networks:
  backend:
  bookingdomain:
  authdomain:
  customerdomain:
  maildomain:

volumes:
  customerdata:
  authdata:
  bookingdata:
  maildata: